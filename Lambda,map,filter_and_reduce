########
#####:
# lambda, map, filter, reduce
#############################
########
###
####

#Lambda

'''def summer (a, b):
    return a+ b

new_sum=lambda a,b:a+b
print(new_sum(4,5))'''

# map
salaries = [1000, 2000, 3000, 4000, 5000]

def new_salary (x) :
    return x * 20 / 100 + x

new_salary(5000)

'''for salary in salaries:
    print(new_salary(salary))'''

#list(map(new_salary,salaries)) #For döngüsüyle aynı işlemi yapar. Buradaki mantık x kordinatındaki fonksiyonun y ye uygulanması işlemidir.

print(list(map(lambda x: x*20/100+x,salaries))) 

# FILTER
list_store = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
'''print(list(filter(lambda x: x % 2 == 0, list_store))) '''#filter bir tür Query vazifesi görür.

# REDUCE
from functools import reduce
list_store = [11, 2, 3, 4]
print(reduce (lambda a, b: a + b, list_store)) #Listeden verileri ikili olarak alır ve ona göre işlem yapılır.
